---Exp3_S8_Wilangely_Diaz
---Evaluacion Sumativa: MiniMarket "Doña Marta"
---Parte 1- Creacion

DROP TABLE REGION CASCADE CONSTRAINTS;
DROP TABLE COMUNA CASCADE CONSTRAINTS;
DROP TABLE AFP CASCADE CONSTRAINTS;
DROP TABLE SALUD CASCADE CONSTRAINTS;
DROP TABLE MEDIO_PAGO CASCADE CONSTRAINTS;
DROP TABLE EMPLEADO CASCADE CONSTRAINTS;
DROP TABLE ADMINISTRATIVO CASCADE CONSTRAINTS;
DROP TABLE VENDEDOR CASCADE CONSTRAINTS;
DROP TABLE CATEGORIA CASCADE CONSTRAINTS;
DROP TABLE MARCA CASCADE CONSTRAINTS;
DROP TABLE PROVEEDOR CASCADE CONSTRAINTS;
DROP TABLE PRODUCTO CASCADE CONSTRAINTS;
DROP TABLE VENTA CASCADE CONSTRAINTS;
DROP TABLE DETALLE_VENTA CASCADE CONSTRAINTS;






CREATE TABLE REGION (
    id_region       NUMBER(4)       NOT NULL,
    nombre_region   VARCHAR2(30)    NOT NULL,
    CONSTRAINT REGION_PK PRIMARY KEY (id_region)
);


CREATE TABLE COMUNA (
    id_comuna       NUMBER(4)       NOT NULL,
    nombre_comuna   VARCHAR2(30)    NOT NULL,
    id_region       NUMBER(4)       NOT NULL,
    CONSTRAINT COMUNA_PK PRIMARY KEY (id_comuna),
    CONSTRAINT COMUNA_PK_REGION FOREIGN KEY (id_region)
        REFERENCES REGION (id_region)
);


CREATE TABLE AFP (
    id_afp      NUMBER(5) GENERATED BY DEFAULT AS IDENTITY
                (START WITH 210 INCREMENT BY 6) NOT NULL,
    nombre_afp  VARCHAR2(50) NOT NULL,
    CONSTRAINT AFP_PK PRIMARY KEY (id_afp)
);



CREATE TABLE SALUD (
    id_salud    NUMBER(3)       NOT NULL,
    nom_salud   VARCHAR2(40)    NOT NULL,
    CONSTRAINT SALUD_PK PRIMARY KEY (id_salud)
);


CREATE TABLE MEDIO_PAGO(
    id_mpago        NUMBER(3)       NOT NULL,
    nombre_mpago    VARCHAR2(40)    NOT NULL,
    CONSTRAINT MEDIO_PAGO_PK PRIMARY KEY (id_mpago)
);


CREATE TABLE EMPLEADO (
    id_empleado     NUMBER(4)       NOT NULL,
    rut_empleado    VARCHAR2(12)    NOT NULL,
    nombre_empleado VARCHAR2(30)    NOT NULL,
    apellido_pat    VARCHAR2(30)    NOT NULL,
    apellido_mat    VARCHAR2(30)    NOT NULL,
    fecha_contrato  DATE            NOT NULL,
    sueldo_base     NUMBER(10,0)    NOT NULL,
    bono_jefatura   NUMBER(10,0),
    activo          CHAR(1)         NOT NULL,
    tipo_empleado   VARCHAR2(30)    NOT NULL,
    cod_empleado    NUMBER(4),
    id_salud        NUMBER(3)    NOT NULL,
    id_afp          NUMBER(3)    NOT NULL,
    CONSTRAINT EMPLEADO_PK PRIMARY KEY (id_empleado),
    CONSTRAINT EMPLEADO_FK_SALUD FOREIGN KEY (id_salud)
    REFERENCES SALUD (id_salud),
    CONSTRAINT EMPLEADO_FK_AFP FOREIGN KEY (id_afp)
    REFERENCES AFP (id_afp),
    CONSTRAINT EMPLEADO_FK_EMPLEADO FOREIGN KEY (cod_empleado)
    REFERENCES EMPLEADO (id_empleado)
);


CREATE TABLE ADMINISTRATIVO (
  id_empleado   NUMBER(4)           NOT NULL,
  CONSTRAINT ADMINISTRATIVO_PK PRIMARY KEY (id_empleado),
  CONSTRAINT ADMIN_FK_EMPLEADO FOREIGN KEY (id_empleado)
    REFERENCES EMPLEADO (id_empleado)
);


CREATE TABLE VENDEDOR (
  id_empleado       NUMBER(4)       NOT NULL,
  comision_venta    NUMBER(5,2),
  CONSTRAINT VENDEDOR_PK PRIMARY KEY (id_empleado),
  CONSTRAINT VENDEDOR_FK_EMPLEADO FOREIGN KEY (id_empleado)
    REFERENCES EMPLEADO (id_empleado)
);



CREATE TABLE CATEGORIA (
  id_categoria      NUMBER(3)           NOT NULL,
  nombre_categoria  VARCHAR2(255)       NOT NULL,
  CONSTRAINT CATEGORIA_PK PRIMARY KEY (id_categoria)
);



CREATE TABLE MARCA (
  id_marca     NUMBER(3)     NOT NULL,
  nombre_marca VARCHAR2(25)  NOT NULL,
  CONSTRAINT MARCA_PK PRIMARY KEY (id_marca)
);




CREATE TABLE PROVEEDOR (
    id_proveedor        NUMBER(4)       NOT NULL,
    nombre_proveedor    VARCHAR2(40)    NOT NULL,
    rut_proveedor       VARCHAR2(12)    NOT NULL,
    telefono            VARCHAR2(20),
    email               VARCHAR2(100),
    direccion           VARCHAR2(100),
    id_comuna           NUMBER(4)       NOT NULL,
    CONSTRAINT PROVEEDOR_KEY PRIMARY KEY (id_proveedor),
    CONSTRAINT PROVEEDOR_UK_EMAIL UNIQUE (email),
    CONSTRAINT PROVEEDOR_FK_COMUNA FOREIGN KEY (id_comuna)
    REFERENCES COMUNA (id_comuna)
);


CREATE TABLE PRODUCTO (
    id_producto     NUMBER(4)           NOT NULL,
    nombre_prod     VARCHAR2(50)        NOT NULL,
    precio_unitario NUMBER(10,2)        NOT NULL,
    origen_nacional CHAR(1)             NOT NULL,
    stock_minimo    NUMBER(3)           NOT NULL,
    activo          CHAR(1)             NOT NULL,
    id_marca        NUMBER(3)           NOT NULL,
    id_categoria    NUMBER(3)           NOT NULL,
    id_proveedor    NUMBER(4)           NOT NULL,
    CONSTRAINT PRODUCTO_PK PRIMARY KEY (id_producto),
    CONSTRAINT PRODUCTO_FK_MARCA FOREIGN KEY (id_marca)
    REFERENCES MARCA (id_marca),
    CONSTRAINT PRODUCTO_FK_CATEGORIA FOREIGN KEY (id_categoria)
    REFERENCES CATEGORIA (id_categoria),
    CONSTRAINT PRODUCTO_FK_PROVEEDOR FOREIGN KEY (id_proveedor)
    REFERENCES PROVEEDOR (id_proveedor) 
);




CREATE TABLE VENTA (
    id_venta        NUMBER(10) GENERATED BY DEFAULT AS IDENTITY
                    (START WITH 5050 INCREMENT BY 3)    NOT NULL,
    fecha_venta     DATE        NOT NULL,
    id_empleado     NUMBER(4)           NOT NULL,
    id_mpago        NUMBER(3)           NOT NULL,
    CONSTRAINT VENTA_PK PRIMARY KEY (id_venta),
    CONSTRAINT VENTA_FK_EMPLEADO FOREIGN KEY (id_empleado)
    REFERENCES EMPLEADO (id_empleado),
    CONSTRAINT VENTA_FK_MEDIO_PAGO FOREIGN KEY (id_mpago)
    REFERENCES MEDIO_PAGO (id_mpago)
);




CREATE TABLE DETALLE_VENTA (
    id_venta        NUMBER(10)           NOT NULL,
    id_producto     NUMBER(4)           NOT NULL,
    cantidad        NUMBER(4)           NOT NULL,
    CONSTRAINT DETALLE_VENTA_PK PRIMARY KEY (id_venta, id_producto),
    CONSTRAINT DET_VENTA_FK_VENTA FOREIGN KEY (id_venta)
    REFERENCES VENTA (id_venta),
    CONSTRAINT DET_VENTA_FK_PRODUCTO FOREIGN KEY (id_producto)
    REFERENCES PRODUCTO (id_producto)
);




-- parte 2 REGLAS DE NEGOCIO

ALTER TABLE EMPLEADO
    ADD CONSTRAINT EMPLEADO_CK_SUELDO_MIN
    CHECK (sueldo_base >= 400000);
    
    

ALTER TABLE VENDEDOR
    ADD CONSTRAINT VENDEDOR_CK_COMISION
    CHECK (comision_venta BETWEEN 0 AND 0.25);
    
    
    
ALTER TABLE PRODUCTO
    ADD CONSTRAINT PRODUCTO_CK_STOCKMIN
    CHECK (stock_minimo >=3);



ALTER TABLE MARCA
    ADD CONSTRAINT MARCA_UK_NOMBRE
    UNIQUE (nombre_marca);
    
    
ALTER TABLE DETALLE_VENTA
    ADD CONSTRAINT DETALLE_VENTA_CK_CANT
    CHECK (cantidad > 0);



---- parte 3 Poblamiento del modelo



CREATE SEQUENCE SEQ_SALUD       START WITH 2050 INCREMENT BY 10;
CREATE SEQUENCE SEQ_EMPLEADO    START WITH 750 INCREMENT BY 3;

INSERT INTO MEDIO_PAGO (id_mpago, nombre_mpago) VALUES (11, 'Efectivo');
INSERT INTO MEDIO_PAGO (id_mpago, nombre_mpago) VALUES (12, 'Tarjeta Débito');
INSERT INTO MEDIO_PAGO (id_mpago, nombre_mpago) VALUES (13, 'Tarjeta Crédito');
INSERT INTO MEDIO_PAGO (id_mpago, nombre_mpago) VALUES (14, 'Transferencia');



INSERT INTO AFP (nombre_afp) VALUES ('AFP Habitat');
INSERT INTO AFP (nombre_afp) VALUES ('AFP Cuprum');
INSERT INTO AFP (nombre_afp) VALUES ('AFP Provida');
INSERT INTO AFP (nombre_afp) VALUES ('AFP PlanVital');


INSERT INTO SALUD (id_salud, nom_salud) VALUES (SEQ_SALUD.NEXTVAL, 'Fonasa');           
INSERT INTO SALUD (id_salud, nom_salud) VALUES (SEQ_SALUD.NEXTVAL, 'Isapre Colmena');   
INSERT INTO SALUD (id_salud, nom_salud) VALUES (SEQ_SALUD.NEXTVAL, 'Isapre Banmédica'); 
INSERT INTO SALUD (id_salud, nom_salud) VALUES (SEQ_SALUD.NEXTVAL, 'Isapre Cruz Blanca');


ALTER TABLE SALUD    MODIFY (id_salud NUMBER(4));
ALTER TABLE EMPLEADO MODIFY (id_salud NUMBER(4));
ALTER TABLE EMPLEADO MODIFY (id_afp   NUMBER(5));


INSERT INTO EMPLEADO (
    id_empleado, rut_empleado, nombre_empleado, apellido_pat, apellido_mat, 
    fecha_contrato, sueldo_base, bono_jefatura, activo, tipo_empleado,
    cod_empleado, id_salud, id_afp) VALUES (SEQ_EMPLEADO.NEXTVAL, '75.444.444-4', 'Luis',
    'Reyes', 'Fuentes', DATE '2023-04-01', 560000, NULL, 'S', 'Vendedor', NULL, 
    (SELECT id_salud FROM SALUD WHERE nom_salud = 'Isapre Banmédica'),
    (SELECT id_afp   FROM AFP   WHERE nombre_afp = 'AFP Provida')
);


INSERT INTO EMPLEADO (
  id_empleado, rut_empleado, nombre_empleado, apellido_pat, apellido_mat,
  fecha_contrato, sueldo_base, bono_jefatura, activo, tipo_empleado,
  cod_empleado, id_salud, id_afp
) VALUES (
  SEQ_EMPLEADO.NEXTVAL, '18.526.358-2', 'José', 'Muñoz', 'Ramírez',
  DATE '2021-07-10', 900000, 75000, 'S', 'Administrativo',
  NULL,
  (SELECT id_salud FROM SALUD WHERE nom_salud = 'Isapre Colmena'),
  (SELECT id_afp   FROM AFP   WHERE nombre_afp = 'AFP Cuprum')
);



INSERT INTO EMPLEADO (
  id_empleado, rut_empleado, nombre_empleado, apellido_pat, apellido_mat,
  fecha_contrato, sueldo_base, bono_jefatura, activo, tipo_empleado,
  cod_empleado, id_salud, id_afp
) VALUES (
  SEQ_EMPLEADO.NEXTVAL, '15.232.158-3', 'Verónica', 'Soto', 'Alarcón',
  DATE '2020-01-05', 880000, 70000, 'S', 'Vendedor',
  (SELECT MIN(id_empleado) FROM EMPLEADO),
  (SELECT id_salud FROM SALUD WHERE nom_salud = 'Fonasa'),
  (SELECT id_afp   FROM AFP   WHERE nombre_afp = 'AFP Habitat')
);

INSERT INTO EMPLEADO (
  id_empleado, rut_empleado, nombre_empleado, apellido_pat, apellido_mat,
  fecha_contrato, sueldo_base, bono_jefatura, activo, tipo_empleado,
  cod_empleado, id_salud, id_afp
) VALUES (
  SEQ_EMPLEADO.NEXTVAL, '20.478.965-K', 'Tomás', 'Vidal', 'Espinoza',
  DATE '2023-06-01', 530000, NULL, 'S', 'Vendedor',
  (SELECT MIN(id_empleado) FROM EMPLEADO),
  (SELECT id_salud FROM SALUD WHERE nom_salud = 'Fonasa'),
  (SELECT id_afp   FROM AFP   WHERE nombre_afp = 'AFP PlanVital')
);



INSERT INTO EMPLEADO (
  id_empleado, rut_empleado, nombre_empleado, apellido_pat, apellido_mat,
  fecha_contrato, sueldo_base, bono_jefatura, activo, tipo_empleado,
  cod_empleado, id_salud, id_afp
) VALUES (
  SEQ_EMPLEADO.NEXTVAL, '26.370.128-3', 'Wila', 'Diaz', 'Calles',
  DATE '2023-05-12', 620000, NULL, 'S', 'Vendedor',
  (SELECT MIN(id_empleado) FROM EMPLEADO),
  (SELECT id_salud FROM SALUD WHERE nom_salud = 'Isapre Cruz Blanca'),
  (SELECT id_afp   FROM AFP   WHERE nombre_afp = 'AFP PlanVital')
);



INSERT INTO EMPLEADO (
  id_empleado, rut_empleado, nombre_empleado, apellido_pat, apellido_mat,
  fecha_contrato, sueldo_base, bono_jefatura, activo, tipo_empleado,
  cod_empleado, id_salud, id_afp
) VALUES (
  SEQ_EMPLEADO.NEXTVAL, '18.258.777-7', 'Javiera', 'Pino', 'Rojas',
  DATE '2023-05-10', 650000, NULL, 'S', 'Vendedor',
  (SELECT MIN(id_empleado) FROM EMPLEADO),
  (SELECT id_salud FROM SALUD WHERE nom_salud = 'Fonasa'),
  (SELECT id_afp   FROM AFP   WHERE nombre_afp = 'AFP Provida')
);





INSERT INTO VENDEDOR (id_empleado, comision_venta)
SELECT id_empleado, 0.08 FROM EMPLEADO WHERE tipo_empleado = 'Vendedor';


INSERT INTO ADMINISTRATIVO (id_empleado)
SELECT id_empleado FROM EMPLEADO WHERE tipo_empleado = 'Administrativo';


INSERT INTO VENTA (fecha_venta, id_empleado, id_mpago)
SELECT DATE '2025-05-12', E.ID_EMPLEADO, 12 FROM EMPLEADO e
WHERE e.rut_empleado = '20.478.965-K';


INSERT INTO VENTA (fecha_venta, id_empleado, id_mpago)
SELECT DATE '2025-06-20', E.ID_EMPLEADO, 13 FROM EMPLEADO e
WHERE e.rut_empleado = '15.232.158-3';


INSERT INTO VENTA (fecha_venta, id_empleado, id_mpago)
SELECT DATE '2025-06-20', E.ID_EMPLEADO, 11 FROM EMPLEADO e
WHERE e.rut_empleado = '18.526.358-2';

COMMIT;


---Parte 4 (INFORMES)
---INFORME 1:

SELECT
    e.id_empleado   AS "IDENTIFICADOR",
    e.nombre_empleado || ' ' || e.apellido_pat || ' ' || e.apellido_mat     AS "NOMBRE COMPLETO",
    e.sueldo_base   AS "SALARIO",
    e.bono_jefatura AS "BONIFICACION",
    (e.sueldo_base + e.bono_jefatura)   AS "SALARIO SIMULADO" FROM EMPLEADO e
    WHERE e.activo = 'S' AND e.bono_jefatura IS NOT NULL
    ORDER BY (e.sueldo_base + e.bono_jefatura) DESC,
    e.apellido_pat DESC;



--- INFORME 2


SELECT
    e.nombre_empleado || ' ' || e.apellido_pat || ' ' || e.apellido_mat     AS "EMPLEADO",
    e.sueldo_base               AS "SUELDO",
    e.sueldo_base * 0.08        AS "POSIBLE AUMENTO",
    e.sueldo_base * 1.08        AS "SALARIO SIMULADO"
    FROM EMPLEADO e WHERE sueldo_base    BETWEEN 550000 AND 800000
    ORDER BY sueldo_base ASC;
    
    
    
    

